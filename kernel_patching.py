# -*- coding: utf-8 -*-
"""Kernel_Patching.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ufeyD_9691IAhuebZThx2njR0JjAtyE9
"""

#!pip install opencv-python

import cv2

class KernelPatch():
  patchKernelSize=None
  imRoi=None
  imRoiPadding=None
  imPatchList=None

  def __init__(self,kernelSize,imRoi):
    self.patchKernelSize=kernelSize
    self.imRoi=imRoi
    self.imRoiPadding=self.generateRoiWithPadding()
  
  def extractOverlappingPatchListFromROI(self):
    roiPadding=self.imRoiPadding
    patchSize=self.patchKernelSize

    maxXpos=roiPadding.shape[0]
    maxYpos=roiPadding.shape[1]

    baseX=0
    baseY=0

    listPatch=[]
    while(baseX+patchSize<=maxXpos):
      while(baseY+patchSize<=maxYpos):
        listPatch.append(roiPadding[baseX:baseX+patchSize,baseY:baseY+patchSize])
        baseY+=patchSize
      baseX+=patchSize
    
    self.imPatchList=np.array(listPatch)
    return self.imPatchList

  def generateRoiWithPadding(self,borderType=cv2.BORDER_CONSTANT):
    imCrop=np.copy(self.imRoi)
    rX=np.mod(imCrop.shape[0],self.patchKernelSize)
    rY=np.mod(imCrop.shape[1],self.patchKernelSize)

    topBottomPadding=0
    leftRightPadding=0

    while(rX!=0):
      topBottomPadding+=1
      imCropPad=cv2.copyMakeBorder(imCrop,topBottomPadding,topBottomPadding,0,0,cv2.BORDER_CONSTANT)
      rX=np.mod(imCropPad.shape[0],self.patchKernelSize)
    
    while(rY!=0):
      leftRightPadding+=1
      imCropPad=cv2.copyMakeBorder(imCrop,0,0,leftRightPadding,leftRightPadding,cv2.BORDER_CONSTANT)
      rY=np.mod(imCropPad.shape[1],self.patchKernelSize)
    
    self.imRoiPadding=cv2.copyMakeBorder(imCrop,topBottomPadding,topBottomPadding,leftRightPadding,leftRightPadding,borderType)
    return self.imRoiPadding